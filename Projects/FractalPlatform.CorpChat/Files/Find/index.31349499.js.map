{"mappings":"AA+CA,SAASA,EAAUC,EAAaC,GAGhC,MAAO,CAFMC,SAASF,EAAYG,MAAO,IAC9BD,SAASD,EAAUE,MAAO,IAErC,CAEA,SAASC,EAAWC,EAAMC,EAAIC,EAAaC,EAAYC,GACrD,MAAMC,EAAgBJ,EAAGK,IAAIL,EAAGM,IAC1BC,EAAeR,EAAKF,MAAQG,EAAGM,IAC/BE,EAAaR,EAAGH,MAAQG,EAAGM,IACjCH,EAAcM,MAAMC,WAAa,wCAE7BT,cACAA,KAAeM,EAAgBH,EAAe,cAC9CF,KAAcK,EAAiBH,EAAgB,cAC/CF,KAAcM,EAAcJ,EAAe,eAC3CH,KAAeO,EAAcJ,EAAe,eAC5CH,SACN,CAEA,SAASU,EAAoBC,GAC7B,MAAMC,EAAWC,SAASC,cAAc,aACpCC,OAAOJ,EAAcf,QAAU,EACjCgB,EAASJ,MAAMQ,OAAS,EAExBJ,EAASJ,MAAMQ,OAAS,CAE1B,CAEA,MAAMC,EAAaJ,SAASC,cAAc,eACpCI,EAAWL,SAASC,cAAc,aAClCK,EAAYN,SAASC,cAAc,cACnCM,EAAUP,SAASC,cAAc,YACvCjB,EAAWoB,EAAYC,EAAU,UAAW,UAAWA,GACvDR,EAAoBQ,GAEpBD,EAAWI,QAAU,IA5DrB,SAA2BC,EAAYV,EAAUW,GACjD,MAAOzB,EAAMC,GAAMP,EAAU8B,EAAYV,GACzCf,EAAWyB,EAAYV,EAAU,UAAW,UAAWA,GACnDd,EAAOC,GACTuB,EAAW1B,MAAQG,EACnBwB,EAAU3B,MAAQG,GAElBwB,EAAU3B,MAAQE,CAEpB,CAmD2B0B,CAAkBP,EAAYC,EAAUC,GACnED,EAASG,QAAU,IAlDnB,SAAyBC,EAAYV,EAAUa,GAC/C,MAAO3B,EAAMC,GAAMP,EAAU8B,EAAYV,GACzCf,EAAWyB,EAAYV,EAAU,UAAW,UAAWA,GACvDF,EAAoBE,GAChBd,GAAQC,GACVa,EAAShB,MAAQG,EACjB0B,EAAQ7B,MAAQG,IAEhB0B,EAAQ7B,MAAQE,EAChBc,EAAShB,MAAQE,EAEnB,CAuCyB4B,CAAgBT,EAAYC,EAAUE,GAC/DD,EAAUE,QAAU,IArFpB,SAA0BC,EAAYC,EAAWE,EAASvB,GACxD,MAAOJ,EAAMC,GAAMP,EAAU+B,EAAWE,GACxC5B,EAAW0B,EAAWE,EAAS,UAAW,UAAWvB,GACjDJ,EAAOC,GACPuB,EAAW1B,MAAQG,EACnBwB,EAAU3B,MAAQG,GAElBuB,EAAW1B,MAAQE,CAEzB,CA4E0B6B,CAAiBV,EAAYE,EAAWC,EAASF,GAC3EE,EAAQC,QAAU,IA3ElB,SAAwBT,EAAUW,EAAWE,EAASvB,GACpD,MAAOJ,EAAMC,GAAMP,EAAU+B,EAAWE,GACxC5B,EAAW0B,EAAWE,EAAS,UAAW,UAAWvB,GACrDQ,EAAoBe,GAChB3B,GAAQC,GACRa,EAAShB,MAAQG,EACjB0B,EAAQ7B,MAAQG,GAEhB0B,EAAQ7B,MAAQE,CAEtB,CAiEwB8B,CAAeV,EAAUC,EAAWC,EAASF","sources":["src/pages/home/home.js"],"sourcesContent":["function controlFromInput(fromSlider, fromInput, toInput, controlSlider) {\n  const [from, to] = getParsed(fromInput, toInput);\n  fillSlider(fromInput, toInput, '#D8E0EC', '#657BDF', controlSlider);\n  if (from > to) {\n      fromSlider.value = to;\n      fromInput.value = to;\n  } else {\n      fromSlider.value = from;\n  }\n}\n  \nfunction controlToInput(toSlider, fromInput, toInput, controlSlider) {\n  const [from, to] = getParsed(fromInput, toInput);\n  fillSlider(fromInput, toInput, '#D8E0EC', '#657BDF', controlSlider);\n  setToggleAccessible(toInput);\n  if (from <= to) {\n      toSlider.value = to;\n      toInput.value = to;\n  } else {\n      toInput.value = from;\n  }\n}\n\nfunction controlFromSlider(fromSlider, toSlider, fromInput) {\nconst [from, to] = getParsed(fromSlider, toSlider);\nfillSlider(fromSlider, toSlider, '#D8E0EC', '#657BDF', toSlider);\nif (from > to) {\n  fromSlider.value = to;\n  fromInput.value = to;\n} else {\n  fromInput.value = from;\n}\n}\n\nfunction controlToSlider(fromSlider, toSlider, toInput) {\nconst [from, to] = getParsed(fromSlider, toSlider);\nfillSlider(fromSlider, toSlider, '#D8E0EC', '#657BDF', toSlider);\nsetToggleAccessible(toSlider);\nif (from <= to) {\n  toSlider.value = to;\n  toInput.value = to;\n} else {\n  toInput.value = from;\n  toSlider.value = from;\n}\n}\n\nfunction getParsed(currentFrom, currentTo) {\nconst from = parseInt(currentFrom.value, 10);\nconst to = parseInt(currentTo.value, 10);\nreturn [from, to];\n}\n\nfunction fillSlider(from, to, sliderColor, rangeColor, controlSlider) {\n  const rangeDistance = to.max-to.min;\n  const fromPosition = from.value - to.min;\n  const toPosition = to.value - to.min;\n  controlSlider.style.background = `linear-gradient(\n    to right,\n    ${sliderColor} 0%,\n    ${sliderColor} ${(fromPosition)/(rangeDistance)*100}%,\n    ${rangeColor} ${((fromPosition)/(rangeDistance))*100}%,\n    ${rangeColor} ${(toPosition)/(rangeDistance)*100}%, \n    ${sliderColor} ${(toPosition)/(rangeDistance)*100}%, \n    ${sliderColor} 100%)`;\n}\n\nfunction setToggleAccessible(currentTarget) {\nconst toSlider = document.querySelector('#toSlider');\nif (Number(currentTarget.value) <= 0 ) {\n  toSlider.style.zIndex = 2;\n} else {\n  toSlider.style.zIndex = 0;\n}\n}\n\nconst fromSlider = document.querySelector('#fromSlider');\nconst toSlider = document.querySelector('#toSlider');\nconst fromInput = document.querySelector('#fromInput');\nconst toInput = document.querySelector('#toInput');\nfillSlider(fromSlider, toSlider, '#D8E0EC', '#657BDF', toSlider);\nsetToggleAccessible(toSlider);\n\nfromSlider.oninput = () => controlFromSlider(fromSlider, toSlider, fromInput);\ntoSlider.oninput = () => controlToSlider(fromSlider, toSlider, toInput);\nfromInput.oninput = () => controlFromInput(fromSlider, fromInput, toInput, toSlider);\ntoInput.oninput = () => controlToInput(toSlider, fromInput, toInput, toSlider);"],"names":["$fbba0b4090461dc5$var$getParsed","currentFrom","currentTo","parseInt","value","$fbba0b4090461dc5$var$fillSlider","from","to","sliderColor","rangeColor","controlSlider","rangeDistance","max","min","fromPosition","toPosition","style","background","$fbba0b4090461dc5$var$setToggleAccessible","currentTarget","toSlider","document","querySelector","Number","zIndex","$fbba0b4090461dc5$var$fromSlider","$fbba0b4090461dc5$var$toSlider","$fbba0b4090461dc5$var$fromInput","$fbba0b4090461dc5$var$toInput","oninput","fromSlider","fromInput","$fbba0b4090461dc5$var$controlFromSlider","toInput","$fbba0b4090461dc5$var$controlToSlider","$fbba0b4090461dc5$var$controlFromInput","$fbba0b4090461dc5$var$controlToInput"],"version":3,"file":"index.31349499.js.map"}